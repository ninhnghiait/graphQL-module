directive @isAuthenticated on FIELD | FIELD_DEFINITION
directive @hasRole(role: String) on FIELD | FIELD_DEFINITION

enum RoleEnum {
	MEMBER
	MANAGER
	ADMIN
}

input CreateCategoryInput {
	username: String!
	password: String!
	email: String!
}

input UpdateCategoryInput {
	username: String
	password: String
	email: String
}

input LoginCategoryInput {
	username: String!
	password: String!
}

type LoginResponse {
	token: String!
}

type Category {
	_id: String!
	categoryname: String!
	parent: String!
	description: String!
	createdAt: String!
	updatedAt: String!
}

type Query {
	categorys(): [Category!] @isAuthenticated
	parent-categorys(): [Category!] @isAuthenticated
	category(_id: String!): Category @isAuthenticated
	user123(_id: String!): Category @isAuthenticated
}

type Mutation {
	createCategory(input: CreateCategoryInput!): Category
	updateCategory(_id: String!, input: UpdateCategoryInput!): Boolean
	deleteCategory(_id: String!): Boolean @hasRole(role: "admin")
	deleteCategorys: Boolean! @hasRole(role: "admin")
}

